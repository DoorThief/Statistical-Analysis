#!/bin/bash
#Functions
getAvg() {
	sum=0
	for i in ${ds[@]}; do
		sum=$(($sum + $i))
	done
	avg=$(echo "$sum / $n" | bc -l)	#Printf rounds 0.00
}

getSDSE() {
	sd=0
	for i in ${ds[@]}; do
		sd=$(echo "$sd + ($i - $avg)^2" | bc -l)
	done
	sd=$(echo "sqrt($sd / $n)" | bc -l)
	se=$(echo "$sd / sqrt($n)" | bc -l)
}

ttest() {
	sdp=$(echo "$sd * sqrt($n / ($n - 1))"  | bc -l)
	sep=$(echo "$sdp * sqrt($n)" | bc -l)
	score=$(echo "($avg - $ev) * $sep" | bc -l)
}

ztest() {
	score=$(echo "($avg - $ev) * $se" | bc -l)
}

read -p "Dataset: " -a ds
#ds=( 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 ) #Debug dataset

for i in ${ds[@]}; do
	n=$(( $n + 1 ))	# Iterator. aka: n at the end of loop
done
getAvg
getSDSE
echo "n: $n, Average: "$(printf "%.2f" $avg)", Std. Deviation: "$(printf "%.3f" $sd)", Std. Error: "$(printf "%.3f" $se)
echo "Dataset: ${ds[*]}"
read -p "EV (Null H): " ev
if [[ $n -lt 30 ]]; then
	m="t"
	ttest
else
	m="z"
	ztest
fi
echo "$m-test: "$(printf "%.3f" $score)" (DOF: "$(( $n - 1 ))")"
